name: Build and Deploy

on:
  push:
    branches: [ master ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  build:
    name: 🛠️ Build gallery-api.jar
    runs-on: ubuntu-latest

    outputs:
      artifact-name: ${{ steps.set-artifact-name.outputs.name }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version-file: .tool-versions
          cache: 'gradle'

      - name: 🔨 Build with Gradle
        run: ./gradlew build --no-daemon --no-watch-fs

      - name: 🏷️ Set artifact name
        id: set-artifact-name
        run: echo "name=gallery-api-${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: 📁 Rename .jar with SHA
        run: cp build/libs/gallery-api.jar build/libs/gallery-api-${GITHUB_SHA}.jar

      - name: 📦 Upload versioned .jar
        uses: actions/upload-artifact@v4
        with:
          name: gallery-api-${{ github.sha }}
          path: build/libs/gallery-api-${{ github.sha }}.jar
          retention-days: 90

#  deploy:
#    name: 🚀 Deploy to mydevil.net
#    runs-on: ubuntu-latest
#    needs: build
#    environment:
#      name: production
#      url: https://twoja-strona.pl
#
#    steps:
#      - name: ⬇️ Download artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: gallery-api-${{ github.sha }}
#          path: dist
#
#      - name: 🧰 Install sshpass
#        run: sudo apt-get update && sudo apt-get install -y sshpass
#
#      - name: 📤 Upload as gallery-api.jar
#        run: |
#          sshpass -p "${{ secrets.MYDEVIL_PASSWORD }}" \
#          scp -o StrictHostKeyChecking=no \
#          dist/gallery-api-${{ github.sha }}.jar \
#          ${{ secrets.MYDEVIL_USER }}@${{ secrets.MYDEVIL_HOST }}:${{ secrets.MYDEVIL_TARGET_DIR }}/gallery-api.jar
#
#      - name: 🚀 Run post-deploy script
#        run: |
#          sshpass -p "${{ secrets.MYDEVIL_PASSWORD }}" \
#          ssh -o StrictHostKeyChecking=no \
#          ${{ secrets.MYDEVIL_USER }}@${{ secrets.MYDEVIL_HOST }} \
#          'bash ~/scripts/post-deploy.sh'
