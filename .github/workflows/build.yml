name: Build and Deploy

on:
  push:
    branches: [ master ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: false

env:
  TARGET_DIR: "projects/gallery"

jobs:
  build:
    name: 🛠️ Build gallery-api.jar
    runs-on: ubuntu-latest

    outputs:
      artifact-name: ${{ steps.set-artifact-name.outputs.name }}

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version-file: .tool-versions
          cache: 'gradle'

      - name: 🔨 Build with Gradle
        run: ./gradlew build --no-daemon --no-watch-fs

      - name: 🏷️ Set artifact name
        id: set-artifact-name
        run: echo "name=gallery-api-${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: 📁 Rename .jar
        run: cp build/libs/gallery-api.jar build/libs/${{ steps.set-artifact-name.outputs.name }}.jar

      - name: 📦 Upload versioned .jar
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-artifact-name.outputs.name }}
          path: build/libs/${{ steps.set-artifact-name.outputs.name }}.jar
          retention-days: 90

  deploy:
    name: 🚀 Deploy to mydevil.net
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production

    steps:
      - name: ⬇️ Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact-name }}
          path: dist

      - name: 🧰 Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: 🚀 Run pre-deploy script
        run: |
          sshpass -p "${{ secrets.PASSWORD }}" \
          ssh -o StrictHostKeyChecking=no \
          ${{ secrets.USERNAME }}@${{ secrets.HOST }} \
          "bash ~/${{ env.TARGET_DIR }}/api-stop.sh"

      - name: 📤 Upload as gallery-api.jar
        run: |
          sshpass -p "${{ secrets.PASSWORD }}" \
          scp -o StrictHostKeyChecking=no \
          dist/${{ needs.build.outputs.artifact-name }}.jar \
          ${{ secrets.USERNAME }}@${{ secrets.HOST }}:${{ env.TARGET_DIR }}/backend/gallery-api.jar

      - name: 🚀 Run post-deploy script
        run: |
          sshpass -p "${{ secrets.PASSWORD }}" \
          ssh -o StrictHostKeyChecking=no \
          ${{ secrets.USERNAME }}@${{ secrets.HOST }} \
          "bash ~/${{ env.TARGET_DIR }}/api-start.sh"
